* to downgrade a package
    - go to 'var/cache/pacman/pkg' and find the version of the package u want to downgrade
    - pacman -U /var/cache/pacman/pkg/<package_full_name>.tar.xz 
* to remove a package
    - This removes the package and its dependecies that no other package uses
        # pacman -Rs <package_name>
* to check or search for a package in local system
    - pacman -Qs <package_name>
* to extract to specific folder
    - unzip <file_name> -d <folder_name>
* install neofetch to get info abt system
    - neofetch
* to check your public ip address use the following website
    - www.ipleak.org
* setting up VPN on Archlinux
    - go to <www.protonvpn.com> and setup an account
    - install <openvpn>, <dialog>,  <python-pip>,  <python-setuptools> (you will mostly have them already installed)
        # use pacman to install them
    - install the <protonvpn-cli> using pip
        # sudo pip3 install protonvpn-cli
    - initialize your protonvpn and connect to it
        # sudo protonvpn init
            $ here when asked for <Protonvpn Openvpn> username and password get this from your protonvpn account
                % go to the accounts tab and there should be an openvpn credential
            $ use the free service
            $ use <UDP> cuz its faster, but as you know <TCP> is more reliable
        # connect to the initialized protonvpn
            $ sudo protonvpn c                  (select and connect to a vpn out of 3 countries)
                % there are only 3 countries to choose from in the free plan
            $ sudo protonvpn c -f               (connect to the fastest server)
                % this command didn't work for you at the time of writing this note
            $ sudo protonvpn r                  (reconnect to the last vpn loaction you connected to)
                % in this case you don't have to choose anything, it'll use your last configuration and choice
        # disconnect from the vpn
            $ sudo protonvpn d
* install <scrcpy> for Andriod phone screen mirroring
    - <scrcpy> is the short hand representation of <Screen Copy>
    - its found in the <AUR>
    - to run it, type <scrcpy> in the terminal
        # make sure the andriod phone is connected first
* install <obs-studio> for screen recording
    - it has so many awesome features
    - don't forget to add audio and screen sources when trying to record (add is simple and straight forward)
* install <genymotion> to simulate andriod device on your pc
    - this is a commercial app, but it has a free edition for personal use
    - download and install it from <AUR>
    - it needs virtualBox to be installed, if its not, then it will be installed
    - if you are getting errors like <virtualBox error: host only error>, something like this then use tht following solutions:
        # install virtualBox and packages related to it
            $ sudo pacman -S virtualbox  virtualbox-guest-iso virtualbox-host-dkms        
        # if the above doesn't work, then try reloading the vmBox
            $ sudo vboxreload
        # is the above command instead gives additional error like "directory doesn't exist", then install the following package
            $ sudo pacman -S virtualbox-host-modules-arch
            $ the above package will ask to overwrite another package if there is conflict, in such case allow it
            $ once again reload vmBox with <vboxreload> command
        # if you still can't run <genymotion> after the above fixes, then update or install linux-headers and linux
            $ sudo pacman -S linux linux-headers
            $ once again reboot vmBox
        # if none of the above steps solves the problem, then research the web for a solution regarding your specific error
* to remove unused dependecies (packages) from arch system, use the following commands
    - pacman -Qdt                                   (lists unused dependecies)
    - pacman -Rsn $(pacman -Qdtq)                   (removes unused dependencies | need super user privilage)
* to remove cached package install files use the following commands
    - paccache -r           (removes all cached versions of installed and uninstalled packages except for the recent 3 versions | need sudo)
    - paccache -rk1         (removed all cached versions except for the one past latest version | the last number can be manipulated as needed)
    - paccache -ruk0        (the <u> flag means to remove uninstalled packages' caches | this command removes all cached versions of uninstalled packages only)
    - pacman -Sc            (to remove all the cached packages that are not currently installed, and the unused sync database | need sudo)
    - pacman -Scc           (To remove all files from the cache | need sudo | don't use this unless you desperatly need disk space)
* to remove packages in yay cache
    - yay -Sc               (to remove cached packages that are not currenly installed)
    - yay -Scc              (to remove all cached pacakegs, both official and AUR)
    - yay -Yc               (clean unneeded packages)
* setup hotspot for wifi-sharing
    - check if the PC has compatible wireless device
        # iw list           (command, need to install <iw> package first)
    - install <linux-wifi-hotspot> package from AUR
    - use terminal command to initialize hotspot
        # create_ap wlan0 eth0 MyAccessPoint MyPassPhrase
* extract rar files
    - install <unrar> package using pacman
    - use the following command to extract
        # unrar e <file.rar>    or
        # unrar e <file.rar> <directory-to-extract-to>
* use <ncdu> package to check which files are taking disk space
    - pacman -S ncdu
    - run <ncdu> on terminal to begin the process
        # ncdu                  (to scan home directory)
        # ncdu <dir_name>       (to scan a specific directory)
            % ncdu Downloads/
        # sudo ncdu -x /        (to scan entire root file system)
    - keys to use after result is displayed
        # i                     (display detail of directory, press the same key to return)
        # right_arrow, left_arrow       (display the content of a dir & go back to upper directory from content)  
* how to make android device appear on window manager
    - update system ( pacman -Syu, need root privilage )
    - install git (official)
    - install mtpfs (official) 
    - install jmtpfs (AUR)
    - install gvfs-mtp (offcial)
        # pacman -Sy gvfs-mtp (NRP)
    - install gvfs-gphoto2 (official)
        # pacman -Sy gvfs-gphoto2 (NRP)
    - reboot
*  to format a usb disk use the following commands
    - first check the usb device mount point
        # lsblk
        # (or) fdisk -l (NRP)
    - unmount the usb disk in order to format it
        # umount <disk mount point> (NRP)
    - to format the disk with fat32 use the following command
        # mkfs.vfat -n '<name>' <mount_point> (NRP)
    - to format the disk with ntfs use the following command
        # mkfs.ntfs <mount_point (NRP)
    - after formating a drive just unmount the usb drive before using it again
* to exract rar file with its original directory structure, use the following command
	- unrar x <file.rar> <exract_to_directory>
* to list files inside a rar file without extracting it, use the following command
	- unrar l <file.rar> 
* install anaconda
 	- install anaconda pakage from AUR using yay
	- add anaconda to path
		# open <~/.bashrc> as root using nano editor
		# append the following to the last line
			% <export PATH=$PATH:/opt/anaconda/bin>
		# restart terminal
	- to start navigator run the following command
		# anaconda-navigator
    - to prevent anaconda from starting the <base> enviroment at terminal startup run the following command
        # conda config --set auto_activate_base false
        # the problem with starting the <base> enviroment is that it sometimes messes with the default bash commands 
* install <Intel Skylake GT2 [HD Graphics 520]> GPU tool called <intel-gpu-tools>
	- pacman -S intel-gpu-tools		(NRP)
	- to get a top like overview of the current gpu usage, run the following command
		# intel_gpu_top				(NRP)
* check terminal emoji and unicode support with the following commands and links
    - curl https://unicode.org/Public/emoji/13.0/emoji-test.txt | less      (used to check emoji support)
        # the <less> pipelined command is used to view the output step by step instead of spilling everything at once
    - curl https://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt      (used to check unicode support)
* to update the database of mlocate package, use the following command
    - updatedb                      (NRP)
* how to install hp printer driver
    - install cups (offical repo)
    - enable & start cups
        # systemctl enable --now cups       (NRP)
        # systemctl start cups              (NRP)
    - install hplip (official repo)
    - install driver plug-in
        # hp-setup -i                       (NRP)
    - install system-config-printer for GUI tool to configure printers (official repo)
